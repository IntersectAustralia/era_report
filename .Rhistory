View(era_this_month)
era_email
era_this_month = mvr_era_activities %>%
filter(month(Date) == month) %>%
filter(era_email == as.symbol(era_email))
era_email
era_this_month = mvr_era_activities %>%
filter(month(Date) == month) %>%
filter(.$era_email == as.symbol(era_email))
era_email
View(era_this_month)
era_this_month = mvr_era_activities %>%
filter(month(Date) == month) %>%
filter(.$era_email != as.symbol(era_email))
View(era_this_month)
x = mvr_era_activities %>%
filter((Date > as.Date(ymd(paste0(year,month,"01"))) & era_email == as.symbol(era_email)))
mvr_era_activities
template_id = "17jPfpBXFyvOh0E5diaTfGJspm7LRvD4Jrv4dCXnvuh4" # do not touch
source("libraries.R")
source("config.r")
source("functions.R")
source("report_authority.R")
gs_auth(key = client_id, secret = client_secret, cache = TRUE) # authenticate for Google Cal
source("config_dev.r")
# authentication
gc_auth(key = client_id, secret = client_secret, cache = TRUE) # authenticate for Google Sheets
gs_auth(key = client_id, secret = client_secret, cache = TRUE) # authenticate for Google Cal
gmail_auth(id = client_id, secret = client_secret) # authenticate for Gmail
source("report_authority.R")
month
year = args[2]
if (is.na(year)){
year = format(as.Date(Sys.Date()), "%Y")
}
for (i in 1:nrow(config_data)){
if (config_data$prepare_report[i]==TRUE){
# set configurations
config = config_data[i,]
member = as.character(config_data[i, "u_name"])
if (member == "Deakin University"){
member = paste(member, as.character(config_data[i, "era_location"]), sep = " - ")
}
dest_folder_id = as.character(config_data[i, "dest_folder_id"])
era_name = as.character(config_data[i, "era_name"])
era_email = as.character(config_data[i, "era_email"])
u_code = as.character(config_data[i, "u_code"])
report_stakeholder = as.character(config_data[i, "stakeholder_name"])
report_file_id <- copy_report(year, month, member, dest_folder_id, template_id)
report <-  report_gs(report_file_id)
report_monthlyReport <- report %>% gs_read(ws = "Month dashboard")
month_weeks <- get_month_eow_dates(year, month)
month_events <- get_month_events(year,month)
table_insert_week1 <- data.frame("Hours" = as.character(), "Task" = as.character(), "Activity" = as.character(), "Description" = as.character(), "Contact" = as.character(), "Date" = as.character(), stringsAsFactors = FALSE)
table_insert_week2 <- data.frame("Hours" = as.character(), "Task" = as.character(), "Activity" = as.character(), "Description" = as.character(), "Contact" = as.character(), "Date" = as.character(), stringsAsFactors = FALSE)
table_insert_week3 <- data.frame("Hours" = as.character(), "Task" = as.character(), "Activity" = as.character(), "Description" = as.character(), "Contact" = as.character(), "Date" = as.character(), stringsAsFactors = FALSE)
table_insert_week4 <- data.frame("Hours" = as.character(), "Task" = as.character(), "Activity" = as.character(), "Description" = as.character(), "Contact" = as.character(), "Date" = as.character(), stringsAsFactors = FALSE)
table_insert_week5 <- data.frame("Hours" = as.character(), "Task" = as.character(), "Activity" = as.character(), "Description" = as.character(), "Contact" = as.character(), "Date" = as.character(), stringsAsFactors = FALSE)
table_insert_month <- data.frame("Hours" = as.character(), "Task" = as.character(), "Activity" = as.character(), "Description" = as.character(), "Contact" = as.character(), "Date" = as.character(), stringsAsFactors = FALSE)
#for loop to create weekly work sheets and one for the month
for (j in 1:nrow(month_events)){
date = month_events$startDate[j]
## clean ups
# utilising title of event
if (grepl("\\$", month_events$summary[j])) {
title = gsub("(.*)(\\$)(.*)", "\\1", month_events$summary[j])
} else {
title = month_events$summary[j]
}
# utilising who or "Contact"
if (grepl("\\$", month_events$summary[j])){
who = gsub("(.*)(\\$)(.*)", "\\3", month_events$summary[j])
} else if (month_events$organizer.self[j] == FALSE) {
who = month_events$organizer.displayName[j]
} else {
who = "NA"
}
# utilising tags or "Activities"
if (grepl("\\:", month_events$summary[j])){
tag = gsub("(.*)(\\:)(.*)", "\\1", month_events$summary[j])
} else {
tag = "untagged"
}
# cleaning up common long-winded descriptions
is_zoom_meeting = grepl("zoom.us", month_events$description[j])
is_training = grepl("Course Materials", month_events$description[j])
if(is_zoom_meeting) {
description = "Video conference"
} else if (is_training) {
description = "Training"
} else {
description = month_events$description[j]
}
minutes = month_events$hours_long[j]
hours = (as.numeric(minutes)%/%60 +  (as.numeric(minutes)%%60/60))
input = cbind(hours,
title,
tag,
description,
who,
date)
input = data.frame(input, stringsAsFactors = FALSE)
# build month events
names(input) = names(table_insert_month)
table_insert_month = rbind(table_insert_month, input)
names(table_insert_month) = c("Hours", "Task", "Activity", "Description", "Contact", "Date")
if (date <= as.Date(as.character(month_weeks[1,1]), "%Y-%m-%d")){
names(input) = names(table_insert_week1)
table_insert_week1 = rbind(table_insert_week1, input)
names(table_insert_week1) = c("Hours", "Task", "Activity", "Description", "Contact", "Date")
} else if (date > as.Date(as.character(month_weeks[1,1]), "%Y-%m-%d") & date <= as.Date(as.character(month_weeks[2,1]), "%Y-%m-%d")){
names(input) = names(table_insert_week2)
table_insert_week2 = rbind(table_insert_week2, input)
names(table_insert_week1) = c("Hours", "Task", "Activity", "Description", "Contact", "Date")
} else if (date > as.Date(as.character(month_weeks[2,1]), "%Y-%m-%d") & date <= as.Date(as.character(month_weeks[3,1]), "%Y-%m-%d")){
names(input) = names(table_insert_week3)
table_insert_week3 = rbind(table_insert_week3, input)
names(table_insert_week1) = c("Hours", "Task", "Activity", "Description", "Contact", "Date")
} else if (date > as.Date(as.character(month_weeks[3,1]), "%Y-%m-%d") & date <= as.Date(as.character(month_weeks[4,1]), "%Y-%m-%d")){
names(input) = names(table_insert_week4)
table_insert_week4 = rbind(table_insert_week4, input)
names(table_insert_week1) = c("Hours", "Task", "Activity", "Description", "Contact", "Date")
} else if (date > as.Date(as.character(month_weeks[4,1]), "%Y-%m-%d") & date <= as.Date(as.character(month_weeks[5,1]), "%Y-%m-%d")){
names(input) = names(table_insert_week5)
table_insert_week5 = rbind(table_insert_week5, input)
names(table_insert_week1) = c("Hours", "Task", "Activity", "Description", "Contact", "Date")
}
}
insert_weekly_tables(month_weeks,
table_insert_week1,
table_insert_week2,
table_insert_week3,
table_insert_week4,
table_insert_week5,
table_insert_month)
# insert report details on front page
report_details = rbind(report_stakeholder, member, era_name)
report %>%
gs_edit_cells(ws = "Month dashboard", input = report_details, anchor = "B2", byrow = TRUE, col_names = FALSE)
report_link = report$browser_url
print(paste("Report saved to", report_link))
# sending era report link
system(paste("Rscript email_out.R", report_link, era_email))
# update data in MVR tables
mvr_id = "1D3jSTSzrcaeCjZEZWW8jLVgxmYGrKYJPDsY6jEw1RJE"
mvr_data = report_gs(mvr_id)
mvr_input = table_insert_month[c("Date", "Hours", "Task", "Activity")]
mvr_input = cbind(u_code, era_email, mvr_input)
mvr_era_activities = mvr_data %>%
gs_read(ws = "era_activities")
mvr_era_activities = mvr_era_activities %>%
filter((Date > as.Date(ymd(paste0(year,month,"01"))) & era_email == as.symbol(era_email)))
names(mvr_era_activities) = names(mvr_input)
mvr_input = rbind(mvr_era_activities, mvr_input)
mvr_data %>%
gs_edit_cells(ws = "era_activities", input = mvr_input, anchor = "A1", byrow = TRUE, col_names = TRUE)
}
}
# update data in MVR tables
mvr_id = "1D3jSTSzrcaeCjZEZWW8jLVgxmYGrKYJPDsY6jEw1RJE"
mvr_data = report_gs(mvr_id)
mvr_input = table_insert_month[c("Date", "Hours", "Task", "Activity")]
mvr_input = cbind(u_code, era_email, mvr_input)
mvr_era_activities = mvr_data %>%
gs_read(ws = "era_activities")
mvr_era_activities
era_email
mvr_era_activities = mvr_era_activities %>%
filter((Date > as.Date(ymd(paste0(year,month,"01"))) & era_email == as.symbol(era_email)))
mvr_input
as.Date(ymd(paste0(year,month,"01"))
)
mvr_era_activities = mvr_data %>%
gs_read(ws = "era_activities")
mvr_era_activities = mvr_era_activities %>%
filter((Date >= as.Date(ymd(paste0(year,month,"01"))) && era_email == as.symbol(era_email)))
mvr_era_activities = mvr_era_activities %>%
filter((Date >= as.Date(ymd(paste0(year,month,"01"))) & era_email == as.symbol(era_email)))
mvr_era_activities = mvr_data %>%
gs_read(ws = "era_activities")
mvr_era_activities = mvr_era_activities %>%
filter((Date >= as.Date(ymd(paste0(year,month,"01"))) && era_email == as.symbol(era_email)))
mvr_era_activities = mvr_data %>%
gs_read(ws = "era_activities")
mvr_era_activities = mvr_era_activities %>%
rowwise() %>%
filter((Date >= as.Date(ymd(paste0(year,month,"01"))) & era_email == as.symbol(era_email)))
mvr_era_activities = mvr_era_activities %>%
rowwise() %>%
filter((Date >= as.Date(ymd(paste0(year,month,"01"))) && era_email == as.symbol(era_email)))
x = era_email
mvr_era_activities = mvr_data %>%
gs_read(ws = "era_activities")
x = era_email
mvr_era_activities = mvr_era_activities %>%
rowwise() %>%
filter((Date >= as.Date(ymd(paste0(year,month,"01"))) && era_email == x))
mvr_era_activities
mvr_era_activities = mvr_data %>%
gs_read(ws = "era_activities")
new_mvr = mvr_era_activities %>%
rowwise() %>%
filter((Date >= as.Date(ymd(paste0(year,month,"01"))) & era_email == x))
new_mvr = mvr_era_activities %>%
rowwise() %>%
filter((Date <= as.Date(ymd(paste0(year,month,"01"))) & era_email != x))
new_mvr = mvr_era_activities %>%
rowwise() %>%
filter(era_email != x & Date <= as.Date(ymd(paste0(year,month,"01"))))
new_mvr = mvr_era_activities %>%
rowwise() %>%
filter(era_email != x && Date <= as.Date(ymd(paste0(year,month,"01"))))
View(new_mvr)
new_mvr = mvr_era_activities %>%
#rowwise() %>%
filter(era_email != x && Date <= as.Date(ymd(paste0(year,month,"01"))))
x
new_mvr = mvr_era_activities %>%
#rowwise() %>%
filter((era_email != x && Date <= as.Date(ymd(paste0(year,month,"01")))))
new_mvr = mvr_era_activities %>%
#rowwise() %>%
filter((!era_email %in% x && Date <= as.Date(ymd(paste0(year,month,"01")))))
new_mvr = mvr_era_activities %>%
#rowwise() %>%
filter((!(era_email %in% x) && Date <= as.Date(ymd(paste0(year,month,"01")))))
new_mvr = mvr_era_activities %>%
#rowwise() %>%
filter((!(era_email %in% x) && Date >= as.Date(ymd(paste0(year,month,"01")))))
as.Date(ymd(paste0(year,month,"01")))
mvr_era_activities
new_mvr = mvr_era_activities %>%
#rowwise() %>%
filter((era_email != x) && Date <= as.Date(ymd(paste0(year,month,"01"))))
View(mvr_input)
x
new_mvr = mvr_era_activities %>%
#rowwise() %>%
filter((era_email == x) && Date <= as.Date(ymd(paste0(year,month,"01"))))
View(mvr_input)
new_mvr = mvr_era_activities %>%
#rowwise() %>%
filter(era_email != x & Date <= as.Date(ymd(paste0(year,month,"01"))))
new_mvr = mvr_era_activities %>%
#rowwise() %>%
filter(era_email == x & Date <= as.Date(ymd(paste0(year,month,"01"))))
new_mvr = mvr_era_activities %>%
#rowwise() %>%
filter(era_email != x & as.Date(Date) <= as.Date(ymd(paste0(year,month,"01"))))
new_mvr = mvr_era_activities %>%
#rowwise() %>%
filter(era_email != x)
View(new_mvr)
new_mvr = mvr_era_activities %>%
#rowwise() %>%
filter(era_email == x & & as.Date(Date) >= as.Date(ymd(paste0(year,month,"01"))))
new_mvr = mvr_era_activities %>%
#rowwise() %>%
filter(era_email == x & as.Date(Date) >= as.Date(ymd(paste0(year,month,"01"))))
old_mvr = mvr_era_activities %>%
#rowwise() %>%
filter(era_email == x & as.Date(Date) >= as.Date(ymd(paste0(year,month,"01"))))
View(old_mvr)
old_mvr = mvr_era_activities %>%
#rowwise() %>%
filter(era_email == era_email & as.Date(Date) >= as.Date(ymd(paste0(year,month,"01"))))
old_mvr = mvr_era_activities %>%
#rowwise() %>%
filter(era_email == as.symbol(era_email) & as.Date(Date) >= as.Date(ymd(paste0(year,month,"01"))))
View(old_mvr)
old_mvr = mvr_era_activities %>%
#rowwise() %>%
filter(era_email == as.character(era_email) & as.Date(Date) >= as.Date(ymd(paste0(year,month,"01"))))
email = era_email
old_mvr = mvr_era_activities %>%
#rowwise() %>%
filter(era_email == email & as.Date(Date) >= as.Date(ymd(paste0(year,month,"01"))))
new_mvr = mvr_era_activities %>%
anti_join(old_mvr)
names(new_mvr) = names(mvr_input)
mvr_input = rbind(mvr_era_activities, mvr_input)
mvr_input
mvr_data = report_gs(mvr_id)
mvr_input = table_insert_month[c("Date", "Hours", "Task", "Activity")]
mvr_input = cbind(u_code, era_email, mvr_input)
mvr_era_activities = mvr_data %>%
gs_read(ws = "era_activities")
email = era_email
old_mvr = mvr_era_activities %>%
filter(era_email == email & as.Date(Date) >= as.Date(ymd(paste0(year,month,"01"))))
new_mvr = mvr_era_activities %>%
anti_join(old_mvr)
names(new_mvr) = names(mvr_input)
mvr_input = rbind(mvr_era_activities, mvr_input)
View(mvr_input)
mvr_data = report_gs(mvr_id)
mvr_input = table_insert_month[c("Date", "Hours", "Task", "Activity")]
mvr_input = cbind(u_code, era_email, mvr_input)
mvr_era_activities = mvr_data %>%
gs_read(ws = "era_activities")
email = era_email
old_mvr = mvr_era_activities %>%
filter(era_email == email & as.Date(Date) >= as.Date(ymd(paste0(year,month,"01"))))
new_mvr = mvr_era_activities %>%
anti_join(old_mvr)
names(new_mvr) = names(mvr_input)
mvr_input = rbind(new_mvr, mvr_input)
recipients_df
source("libraries.R")
source("report_authority.R")
source("functions.R")
source("config.r")
args = commandArgs(trailingOnly = TRUE)
report_link = args[1]
era = args[2]
config = config_data %>%
filter(era_email==era)
member = as.character(config["u_name"])
if (member == "Deakin University"){
member = paste(member, as.character(config["era_location"]), sep = " - ")
}
dest_folder_id = as.character(config["dest_folder_id"])
eRA_name = as.character(config$era_name)
eRA_name
era = "jerry@intersect.org.au"
config = config_data %>%
filter(era_email==era)
report_link = https://docs.google.com/spreadsheets/d/1_Lz2nlQwIPW4RohRQq2QG-wDz5PgQ7aBdVgjBTzZCzc/
report_link = "https://docs.google.com/spreadsheets/d/1_Lz2nlQwIPW4RohRQq2QG-wDz5PgQ7aBdVgjBTzZCzc/"
config = config_data %>%
filter(era_email==era)
member = as.character(config["u_name"])
if (member == "Deakin University"){
member = paste(member, as.character(config["era_location"]), sep = " - ")
}
dest_folder_id = as.character(config["dest_folder_id"])
eRA_name = as.character(config$era_name)
eRA_name
config$send_to_you == TRUE & config$send_to_stakeholder==TRUE
recipients_df = as.data.frame(emails = as.character(era_email, stakeholder_email),
names = as.character(eRA_name, report_stakeholder))
era_email
era
stakeholder_email
stakeholder_email = as.character(config$stakeholder_email)
stakeholder_email
era_email = as.character(config$era_email)
recipients_df = as.data.frame(emails = as.character(era_email, stakeholder_email),
names = as.character(eRA_name, report_stakeholder))
recipients_df = as.data.frame(emails = c(era_email, stakeholder_email),
names = c(eRA_name, report_stakeholder))
c(era_email, stakeholder_email)
c(eRA_name, report_stakeholder)
report_stakeholder = as.character(config$stakeholder_name)
c(eRA_name, report_stakeholder)
recipients_df = data.frame(emails = c(era_email, stakeholder_email),
names = c(eRA_name, report_stakeholder))
recipients_df
i=1
email = email_func(recipients_df$emails[i], era_email, recipients_df$names[i], report_link)
send_message(email)
message(paste("Email sent to", recipients_df$emails[i]))
message(paste("Email sent to", recipients_df$emails[i]))
i=2
email = email_func(recipients_df$emails[i], era_email, recipients_df$names[i], report_link)
send_message(email)
recipients_df$emails[i]
as.character(recipients_df$emails[i])
era_email
email_func
report_link
email = email_func(as.character(recipients_df$emails[i]), era_email, recipients_df$names[i], report_link)
send_message(email)
email_func = function(recipient_email, sender_email, recipient_name, sender_name, report_link){
email = mime(To = recipient_email, From = sender_email,
Subject = "New eRA report prepared",
body = paste0("Hi ", recipient_name, ", A new monthly report has been created for you.\n\nIt can be found here: ", report_link, "\n\n Regards,\n\n"))
return(email)
}
recipients_df$names[i]
era_email
recipients_df
recipients_df$names[i]
as.character(recipients_df$emails[i])
era_email
recipients_df$names[i]
email = email_func(as.character(recipients_df$emails[i]), era_email, as.character(recipients_df$names[i]), report_link)
email = email_func(as.character(recipients_df$emails[i]), era_email, as.character(recipients_df$names[i]), report_link)
report_link
email = email_func(as.character(recipients_df$emails[i]), era_email, as.character(recipients_df$names[i]), report_link)
email_func = function(recipient_email, sender_email, recipient_name, report_link){
email = mime(To = recipient_email, From = sender_email,
Subject = "New eRA report prepared",
body = paste0("Hi ", recipient_name, ", A new monthly report has been created for you.\n\nIt can be found here: ", report_link, "\n\n Regards,\n\n Intersect Australia"))
return(email)
}
email_func = function(recipient_email, sender_email, recipient_name, report_link){
email = mime(To = recipient_email, From = sender_email,
Subject = "New eRA report prepared",
body = paste0("Hi ", recipient_name, ", A new monthly report has been created for you.\n\nIt can be found here: ", report_link, "\n\n Regards,\n\n Intersect Australia"))
return(email)
}
email = email_func(as.character(recipients_df$emails[i]), era_email, as.character(recipients_df$names[i]), report_link)
email
email = email_func(as.character(recipients_df$emails[i]), era_email, as.character(recipients_df$names[i]), report_link)
send_message(email)
dest_folder_id
folder_contents = drive_ls(as_id(dest_folder_id))
folder_contents
?drive_cp
file
file = drive_cp(as_id(template_id), path = as_id(dest_folder_id), name = report_name)
report_name
year =2018
month =11
member
template_id
dest_folder_id
month_name = month.abb[as.numeric(month)]
report_name <- paste0(month_name, year, "_eRA-report_", member)
folder_contents = drive_ls(as_id(dest_folder_id))
folder_contents
report_name
dest_folder_id
file = drive_cp(as_id(template_id), path = as_id(dest_folder_id), name = report_name)
drive_share(as_id(file_id),role = "reader", type = "user", emailAddress = "paddytobias31@gmail.com")
source('~/Syncplicity Folders/RDS26026-Work/GitHub/era_report_dev/functions.R', echo=TRUE)
file_id = file$id
drive_share(as_id(file_id),role = "reader", type = "user", emailAddress = "paddytobias31@gmail.com")
config_data
stakeholder_email = as.character(config_data[i,stakeholder_email])
stakeholder_email = as.character(config_data[i,"stakeholder_email"])
stakeholder_email
# functions
copy_report = function(year, month, member, dest_folder_id, template_id, stakeholder_email){
month_name = month.abb[as.numeric(month)]
report_name <- paste0(month_name, year, "_eRA-report_", member)
folder_contents = drive_ls(as_id(dest_folder_id))
if (report_name %in% folder_contents$name){ # check if report already exists and handle as appropriate
existing_report_ids = folder_contents %>% filter(name==report_name) %>% select(id)
if (nrow(existing_report_ids) > 1){
for (id in existing_report_ids$id[-1]){
drive_mv(as_id(id), name = paste0(report_name, "_OLD"))
}
}
return(existing_report_ids$id[1])
} else { # else if report doesn't exist copy from template
file = drive_cp(as_id(template_id), path = as_id(dest_folder_id), name = report_name)
file_id = file$id
drive_share(as_id(file_id),role = "reader", type = "user", emailAddress = stakeholder_email)
return(file_id)
}
}
email
era_name = eRA_name
drive_share(as_id(file_id),role = "reader", type = "anyone")
source("libraries.R")
source("report_authority.R")
source("functions.R")
source("config.r")
args = commandArgs(trailingOnly = TRUE)
era_email
config = config_data %>%
filter(era_email==era_email)
config
config = config_data %>%
filter(era_email==as.character(era_email))
config
email = era_email
config = config_data %>%
filter(era_email==email)
config
member = as.character(config["u_name"])
if (member == "Deakin University"){
member = paste(member, as.character(config["era_location"]), sep = " - ")
}
dest_folder_id = as.character(config["dest_folder_id"])
eRA_name = as.character(config$era_name)
era_email = as.character(config$era_email)
stakeholder_email = as.character(config$stakeholder_email)
report_stakeholder = as.character(config$stakeholder_name)
email = 'paddy@intersect.org.au'
config = config_data %>%
filter(era_email==email)
member = as.character(config["u_name"])
if (member == "Deakin University"){
member = paste(member, as.character(config["era_location"]), sep = " - ")
}
dest_folder_id = as.character(config["dest_folder_id"])
eRA_name = as.character(config$era_name)
era_email = as.character(config$era_email)
stakeholder_email = as.character(config$stakeholder_email)
report_stakeholder = as.character(config$stakeholder_name)
config$send_to_stakeholder == FALSE
email = email_func(era, era, eRA_name, report_link)
eRA_name
eRA_name
email = email_func(recipient_email = era,
sender_email =  'services.team@intersect.org.au',
recipient_name = eRA_name,
era_name =  eRA_name,
report_link = report_link)
email
send_message(email)
era
email = email_func(recipient_email = era_email,
sender_email =  'services.team@intersect.org.au',
recipient_name = eRA_name,
era_name =  eRA_name,
report_link = report_link)
send_message(email)
era_email
